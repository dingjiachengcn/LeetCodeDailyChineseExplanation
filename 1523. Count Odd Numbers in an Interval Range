Given two non-negative integers low and high. Return the count of odd numbers between low and high (inclusive).

 

Example 1:

Input: low = 3, high = 7
Output: 3
Explanation: The odd numbers between 3 and 7 are [3,5,7].
Example 2:

Input: low = 8, high = 10
Output: 1
Explanation: The odd numbers between 8 and 10 are [9].
 

Constraints:

0 <= low <= high <= 10^9

给定两个非负整数 low 和 high。返回 low 到 high（包括 low 和 high）之间的奇数的数量。

以下是 Java 代码：

java
Copy code
class Solution {
    public int countOdds(int low, int high) {
        return (high + 1) / 2 - low / 2;
    }
}
以下是代码的解释：

第 2 行：使用整除运算计算奇数的数量。

以下是题目翻译：

给定两个非负整数 low 和 high。返回 low 到 high（包括 low 和 high）之间的奇数的数量。

例 1：

输入：low = 3, high = 7
输出：3
说明：在 3 和 7 之间的奇数有 [3,5,7]。

例 2：

输入：low = 8, high = 10
输出：1
说明：在 8 和 10 之间的奇数有 [9]。

限制：

0 <= low <= high <= 10^9
