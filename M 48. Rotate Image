You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

 

Example 1:


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]
Example 2:


Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]
 

Constraints:

n == matrix.length == matrix[i].length
1 <= n <= 20
-1000 <= matrix[i][j] <= 1000

题目翻译：
给定一个 n x n 的二维矩阵，表示一张图像。请将图像顺时针旋转90度。
你必须在原地旋转图像，也就是说你需要直接修改输入的二维矩阵。不要分配另一个二维矩阵来进行旋转。

示例 1:

输入：matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
输出：[[7, 4, 1], [8, 5, 2], [9, 6, 3]]
示例 2:

输入：matrix = [[5, 1, 9, 11], [2, 4, 8, 10], [13, 3, 6, 7], [15, 14, 12, 16]]
输出：[[15, 13, 2, 5], [14, 3, 4, 1], [12, 6, 8, 9], [16, 7, 10, 11]]

约束条件:

n == matrix.length == matrix[i].length
1 <= n <= 20
-1000 <= matrix[i][j] <= 1000

class Solution {
    public void rotate(int[][] matrix) {
        // 首先对矩阵进行转置
        for (int i = 0; i < matrix.length; i++) { // 遍历每一行
            for (int j = i; j < matrix.length; j++) { // 遍历对角线右侧的每个元素
                int temp = matrix[i][j]; // 将 matrix[i][j] 的值保存到临时变量 temp
                matrix[i][j] = matrix[j][i]; // 将 matrix[j][i] 的值赋给 matrix[i][j]
                matrix[j][i] = temp; // 将临时变量 temp 的值赋给 matrix[j][i]
                
            }
            
        }

        // 使用双指针逐行翻转
        for (int i = 0; i < matrix.length; i++) { // 遍历每一行
            for (int j = 0; j < matrix[0].length / 2; j++) { // 遍历每一行的前一半元素
                int temp = matrix[i][j]; // 将 matrix[i][j] 的值保存到临时变量 temp
                matrix[i][j] = matrix[i][matrix.length - 1 - j]; // 将 matrix[i][matrix.length - 1 - j] 的值赋给 matrix[i][j]
                matrix[i][matrix.length - 1 - j] = temp; // 将临时变量 temp 的值赋给 matrix[i][matrix.length - 1 - j]
            }
        }
        
    }
}
这段代码实现了一个名为 rotate 的方法，它接收一个二维整数数组 matrix 作为参数。首先，该方法对输入矩阵进行转置，然后使用双指针逐行翻转矩阵。这两个操作结合在一起实现了将输入矩阵顺时针旋转90度的目标。
